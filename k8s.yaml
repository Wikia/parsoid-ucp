---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: unified-platform-parsoid
    team: iwing
  name: unified-platform-parsoid
  namespace: ${env}
spec:
  ports:
  - port: 80
    name: main
    protocol: TCP
    targetPort: 8080
  selector:
    app: unified-platform-parsoid
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unified-platform-parsoid
  namespace: ${env}
  labels:
    team: iwing
spec:
  selector:
    matchLabels:
      app: unified-platform-parsoid
  replicas: $replicas
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: unified-platform-parsoid
        team: iwing
    spec:
      containers:
      - name: unified-platform-parsoid
        image: ${imageName}
        env:
        - name: ENV
          value: ${env}
        - name: PARSOID_PORT
          value: "8080"
        resources:
          limits:
            cpu: 5
            memory: 3Gi
          requests:
            cpu: 1
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /
            port: 8080
        readinessProbe:
          httpGet:
            path: /
            port: 8080
        ports:
        - containerPort: 8080

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: unified-platform-parsoid
  namespace: ${env}
  labels:
    team: iwing
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefixStrip
spec:
  rules:
  - host: ${env}.${datacenter}.k8s.wikia.net
    http:
      paths:
      - path: /unified-platform-parsoid
        backend:
          serviceName: unified-platform-parsoid
          servicePort: 80

---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    prometheus: ${env}
    role: alert-rules
    team: iwing
  name: unified-platform-parsoid
  namespace: ${env}
spec:
  groups:
    - name: parsoid.rules
      rules:
        - alert: parsoid-health-check
          expr: absent(kube_deployment_status_replicas_available{deployment="unified-platform-parsoid"} > 0)
          labels:
            severity: $severity
            team: iwing
            slack_channel: $slack_channel
            pd: ${send_pd}
          annotations:
            description: Parsoid service is down
            summary: Parsoid service has no healthy instances
        - alert: parsoid-restart
          annotations:
            description: "Parsoid restarted ${'{{ $value | humanize }}'} times during last hour"
          expr: sum(increase(kube_pod_container_status_restarts_total{container="unified-platform-parsoid"}[1h])) > 5
          labels:
            severity: warning
            team: iwing
            slack_channel: $slack_channel
            pd: ""
